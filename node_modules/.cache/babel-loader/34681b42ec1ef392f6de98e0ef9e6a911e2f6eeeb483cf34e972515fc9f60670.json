{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ernes\\\\Desktop\\\\colorclicker\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  document.body.style.overflow = \"hidden\";\n  const [count, setCount] = useState(0);\n  // let ctr = 0;\n  const [multiplier, setMultiplier] = useState(1);\n  function getRandom(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min) + min);\n  }\n\n  // function renderCircle(xPos, yPos, direction, value, color) {\n  //   const id = (ctr++).toString();\n  //   function handleClick() {\n  //     setCount((prev) => prev + value);\n  //     const el = document.getElementById(id);\n  //     el.style.display = \"none\";\n  //   }\n  //   return (\n  //     <svg\n  //       className=\"circle\"\n  //       id={id}\n  //       onClick={handleClick}\n  //       style={{\n  //         left: `calc(${xPos}vw - 60px)`,\n  //         top: `calc(${yPos}vw - 60px)`,\n  //         width: 60,\n  //         height: 60,\n  //         position: \"absolute\",\n  //       }}\n  //     >\n  //       <circle cx={\"50%\"} cy={\"50%\"} r={\"50%\"} fill={color} />\n  //     </svg>\n  //   );\n  // }\n  const colors = [new Color(\"white\", 10), new Color(\"green\", 25), new Color(\"blue\", 50), new Color(\"pink\", 75), new Color(\"purple\", 100), new Color(\"yellow\", 150), new Color(\"red\", 300)];\n  function renderCircles(buffAmount) {\n    const circleBuffer = [];\n    for (let i = 0; i < buffAmount; i++) {\n      let color = colors[Math.floor(Math.random() * colors.length)];\n      let circle = new Circle(getRandom(3, 53), getRandom(3, 40), getRandom(0, 360), color.points, color.name);\n      circleBuffer.push(circle);\n    }\n    return circleBuffer;\n  }\n  const [circles] = useState(renderCircles(15).map(e => e.getJSX()));\n  function renderMultiplierPlusButton() {\n    function handleClick() {\n      setMultiplier(prev => prev + 1);\n      // circles.forEach(e => {\n      //   e.\n      // });\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Plus-Button\",\n      onClick: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this);\n  }\n  // const [plusButton] = useState(renderMultiplierPlusButton());\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App-currency\",\n        children: [count, \"$\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App-game\",\n        children: circles\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App-upgrades\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Upgrades-Farbenwert\",\n          children: \"Farben-Wert:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Upgrades-Multiplier\",\n          children: [\"x\", multiplier]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), renderMultiplierPlusButton()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"QaWv292tZXU6GuAjT7bTUzeitUg=\");\n_c = App;\nexport default App;\nclass Color {\n  constructor(name, points) {\n    this.name = name;\n    this.points = points;\n  }\n  static get name() {\n    return this.name;\n  }\n  static get points() {\n    return this.points;\n  }\n}\nclass Circle {\n  constructor(xPos, yPos, direction, value, color) {\n    this.id = (ctr++).toString();\n    this.xPos = xPos;\n    this.yPos = yPos;\n    this.direction = direction;\n    this.value = value;\n    this.color = color;\n  }\n  handleClick() {\n    App.setCount(prev => prev + value);\n    const el = document.getElementById(id);\n    el.style.display = \"none\";\n  }\n  getJSX() {\n    return /*#__PURE__*/_jsxDEV(\"svg\", {\n      className: \"circle\",\n      id: id,\n      onClick: handleClick,\n      style: {\n        left: `calc(${xPos}vw - 60px)`,\n        top: `calc(${yPos}vw - 60px)`,\n        width: 60,\n        height: 60,\n        position: \"absolute\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"circle\", {\n        cx: \"50%\",\n        cy: \"50%\",\n        r: \"50%\",\n        fill: color\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 5\n    }, this);\n  }\n}\nCircle.ctr = 0;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","App","document","body","style","overflow","count","setCount","multiplier","setMultiplier","getRandom","min","max","Math","ceil","floor","random","colors","Color","renderCircles","buffAmount","circleBuffer","i","color","length","circle","Circle","points","name","push","circles","map","e","getJSX","renderMultiplierPlusButton","handleClick","prev","constructor","xPos","yPos","direction","value","id","ctr","toString","el","getElementById","display","left","top","width","height","position"],"sources":["C:/Users/ernes/Desktop/colorclicker/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  document.body.style.overflow = \"hidden\";\n  const [count, setCount] = useState(0);\n // let ctr = 0;\n  const [multiplier, setMultiplier] = useState(1);\n\n  function getRandom(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min) + min);\n  }\n\n  // function renderCircle(xPos, yPos, direction, value, color) {\n  //   const id = (ctr++).toString();\n  //   function handleClick() {\n  //     setCount((prev) => prev + value);\n  //     const el = document.getElementById(id);\n  //     el.style.display = \"none\";\n  //   }\n  //   return (\n  //     <svg\n  //       className=\"circle\"\n  //       id={id}\n  //       onClick={handleClick}\n  //       style={{\n  //         left: `calc(${xPos}vw - 60px)`,\n  //         top: `calc(${yPos}vw - 60px)`,\n  //         width: 60,\n  //         height: 60,\n  //         position: \"absolute\",\n  //       }}\n  //     >\n  //       <circle cx={\"50%\"} cy={\"50%\"} r={\"50%\"} fill={color} />\n  //     </svg>\n  //   );\n  // }\n  const colors = [\n    new Color(\"white\", 10),\n    new Color(\"green\", 25),\n    new Color(\"blue\", 50),\n    new Color(\"pink\", 75),\n    new Color(\"purple\", 100),\n    new Color(\"yellow\", 150),\n    new Color(\"red\", 300),\n  ];\n\n  function renderCircles(buffAmount) {\n    const circleBuffer = [];\n    for (let i = 0; i < buffAmount; i++) {\n      let color = colors[Math.floor(Math.random() * colors.length)];\n      let circle = new Circle(\n        getRandom(3, 53),\n        getRandom(3, 40),\n        getRandom(0, 360),\n        color.points,\n        color.name\n      );\n      circleBuffer.push(circle);\n    }\n    return circleBuffer;\n  }\n\n  const [circles] = useState(renderCircles(15).map((e) => e.getJSX()));\n\n  function renderMultiplierPlusButton() {\n    function handleClick() {\n      setMultiplier((prev) => prev + 1);\n      // circles.forEach(e => {\n      //   e.\n      // });\n    }\n    return (\n      <div className=\"Plus-Button\" onClick={handleClick}/>\n    );\n  }\n // const [plusButton] = useState(renderMultiplierPlusButton());\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div className=\"App-currency\">{count}$</div>\n        <div className=\"App-game\">{circles}</div>\n        <div className=\"App-upgrades\">\n          <div className=\"Upgrades-Farbenwert\">\n            Farben-Wert:\n          </div>\n          <div className=\"Upgrades-Multiplier\">x{multiplier}</div>\n          {renderMultiplierPlusButton()}\n        </div>\n\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n\nclass Color {\n  name;\n  points;\n\n  constructor(name, points) {\n    this.name = name;\n    this.points = points;\n  }\n\n  static get name() {\n    return this.name;\n  }\n\n  static get points() {\n    return this.points;\n  }\n}\n\nclass Circle {\n  xPos;\n  yPos;\n  direction;\n  value;\n  color;\n  static ctr = 0;\n\n  constructor(xPos, yPos, direction, value, color) {\n    this.xPos = xPos;\n    this.yPos = yPos;\n    this.direction = direction;\n    this.value = value;\n    this.color = color;\n  }\n\n  id = (ctr++).toString();\n\n  handleClick() {\n    App.setCount((prev) => prev + value);\n    const el = document.getElementById(id);\n    el.style.display = \"none\";\n  }\n  getJSX () {\n    return (\n    <svg\n      className=\"circle\"\n      id={id}\n      onClick={handleClick}\n      style={{\n        left: `calc(${xPos}vw - 60px)`,\n        top: `calc(${yPos}vw - 60px)`,\n        width: 60,\n        height: 60,\n        position: \"absolute\",\n      }}\n    >\n      <circle cx={\"50%\"} cy={\"50%\"} r={\"50%\"} fill={color} />\n    </svg>\n  );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}