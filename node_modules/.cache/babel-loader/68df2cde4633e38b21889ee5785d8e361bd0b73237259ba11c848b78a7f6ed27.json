{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ernes\\\\Desktop\\\\colorclicker\\\\src\\\\components\\\\Game.js\";\nimport React, { useEffect, useState } from 'react';\nimport './Game.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Game() {\n  //const player = new Player(\"John\");\n  // let coinsPerSec = 10;\n  // const [count, setCount] = useState(0);\n  // useEffect(() => {\n  //     setTimeout(() => setCount(count + coinsPerSec), 100);\n  //   }, [count]);\n  // const [count, setCount] = useState(0);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Circle, {\n      style: {\n        \"--x2\": `${Math.sqrt(Math.pow(2000, 2) + Math.pow(2000, 2)) * Math.cos(56)}px`,\n        \"--y2\": `${Math.sqrt(Math.pow(2000, 2) + Math.pow(2000, 2)) * Math.sin(56)}px`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_c = Game;\nclass Circle extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      xPos: this.getRandom(3, 53),\n      //starting x-coordinate\n      yPos: this.getRandom(3, 40),\n      //starting y-coordinate\n      direction: this.getRandom(0, 360),\n      //movement direction\n      value: 50,\n      color: Object.keys(Color)[Math.floor(Math.random() * Object.keys(Color).length)] //starting color\n    };\n  }\n\n  getRandom(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min) + min);\n  }\n  render() {\n    // document.documentElement.style.setProperty('--x1', `${this.state.xPos}px`);\n    // document.documentElement.style.setProperty('--y1', `${this.state.yPos}px`);\n    // document.documentElement.style.setProperty('--x2', `${Math.sqrt(Math.pow(2000, 2) + Math.pow(2000, 2)) * Math.cos(this.state.direction)}px`);\n    // document.documentElement.style.setProperty('--y2', `${Math.sqrt(Math.pow(2000, 2) + Math.pow(2000, 2)) * Math.sin(this.state.direction)}px`);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        className: \"circle\",\n        style: {\n          left: `calc(${this.state.xPos}vw - 60px)`,\n          top: `calc(${this.state.yPos}vw - 60px)`\n        },\n        onClick: () => setCount(),\n        children: /*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: 30,\n          cy: 30,\n          r: 30,\n          fill: this.state.color\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this);\n  }\n}\nclass Color {\n  constructor(name) {\n    this.name = name;\n  }\n  toString() {\n    return `Color.${this.name}`;\n  }\n}\n\n// class Player {\n//     name;\n//     money;\n//     constructor(name) {\n//         this.name = name;\n//         this.money = 0;\n//     }\n\n//     static get money() {\n//         return this.money;\n//     }\n//     addMoney(amount) {\n//         this.money += amount;\n//     }\n// }\nColor.Green = new Color('green');\nColor.Blue = new Color('blue');\nColor.Yellow = new Color('yellow');\nColor.Red = new Color('red');\nColor.Pink = new Color('pink');\nColor.Orange = new Color('orange');\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useEffect","useState","Game","Math","sqrt","pow","cos","sin","Circle","Component","constructor","props","state","xPos","getRandom","yPos","direction","value","color","Object","keys","Color","floor","random","length","min","max","ceil","render","left","top","setCount","name","toString","Green","Blue","Yellow","Red","Pink","Orange"],"sources":["C:/Users/ernes/Desktop/colorclicker/src/components/Game.js"],"sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport './Game.css';\r\n\r\nexport default function Game() {\r\n   //const player = new Player(\"John\");\r\n    // let coinsPerSec = 10;\r\n    // const [count, setCount] = useState(0);\r\n    // useEffect(() => {\r\n    //     setTimeout(() => setCount(count + coinsPerSec), 100);\r\n    //   }, [count]);\r\n   // const [count, setCount] = useState(0);\r\n   return (\r\n    <>\r\n        <Circle style={{\"--x2\": `${Math.sqrt(Math.pow(2000, 2) + Math.pow(2000, 2)) * Math.cos(56)}px`, \"--y2\": `${Math.sqrt(Math.pow(2000, 2) + Math.pow(2000, 2)) * Math.sin(56)}px`}}/>\r\n        {/* <div>\r\n            <p style={{ color: 'white' }}>Money: {player.money}</p>\r\n        </div> */}\r\n        {/* <Circle />\r\n        <Circle />\r\n        <Circle />\r\n        <Circle />\r\n        <Circle />\r\n        <Circle />\r\n        <Circle />\r\n        <Circle />\r\n        <Circle />\r\n        <Circle />\r\n        <Circle />\r\n        <Circle />\r\n        <Circle />\r\n        <Circle /> */}\r\n    </>\r\n   );\r\n}\r\n\r\nclass Circle extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            xPos: this.getRandom(3, 53),  //starting x-coordinate\r\n            yPos: this.getRandom(3, 40),  //starting y-coordinate\r\n            direction: this.getRandom(0, 360),  //movement direction\r\n            value: 50,\r\n            color: Object.keys(Color)[Math.floor(Math.random() * Object.keys(Color).length)],  //starting color\r\n        }\r\n    }\r\n\r\n    getRandom(min, max) {\r\n        min = Math.ceil(min);\r\n        max = Math.floor(max);\r\n        return Math.floor(Math.random() * (max - min) + min);\r\n    }\r\n    \r\n\r\n    render() {\r\n\r\n        // document.documentElement.style.setProperty('--x1', `${this.state.xPos}px`);\r\n        // document.documentElement.style.setProperty('--y1', `${this.state.yPos}px`);\r\n        // document.documentElement.style.setProperty('--x2', `${Math.sqrt(Math.pow(2000, 2) + Math.pow(2000, 2)) * Math.cos(this.state.direction)}px`);\r\n        // document.documentElement.style.setProperty('--y2', `${Math.sqrt(Math.pow(2000, 2) + Math.pow(2000, 2)) * Math.sin(this.state.direction)}px`);\r\n        return (\r\n            <div >\r\n                <svg className='circle' style={{\r\n                    left: `calc(${this.state.xPos}vw - 60px)`, \r\n                    top: `calc(${this.state.yPos}vw - 60px)`,\r\n                    }} onClick={() => setCount()}\r\n                    >\r\n                <circle cx={30} cy={30} r={30} fill={this.state.color}/>\r\n            </svg>\r\n            </div>\r\n               \r\n        );\r\n    }\r\n    \r\n}\r\n\r\nclass Color {\r\n    static Green = new Color('green');\r\n    static Blue = new Color('blue');\r\n    static Yellow = new Color('yellow');\r\n    static Red = new Color('red');\r\n    static Pink = new Color('pink');\r\n    static Orange = new Color('orange');\r\n  \r\n    constructor(name) {\r\n      this.name = name;\r\n    }\r\n    toString() {\r\n      return `Color.${this.name}`;\r\n    }\r\n  }\r\n\r\n// class Player {\r\n//     name;\r\n//     money;\r\n//     constructor(name) {\r\n//         this.name = name;\r\n//         this.money = 0;\r\n//     }\r\n\r\n//     static get money() {\r\n//         return this.money;\r\n//     }\r\n//     addMoney(amount) {\r\n//         this.money += amount;\r\n//     }\r\n// }\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}