{"ast":null,"code":"import { complex, color } from 'style-value-types';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from 'hey-listen';\nfunction getMixer(origin, target) {\n  if (typeof origin === \"number\") {\n    return v => mix(origin, target, v);\n  } else if (color.test(origin)) {\n    return mixColor(origin, target);\n  } else {\n    return mixComplex(origin, target);\n  }\n}\nconst mixArray = (from, to) => {\n  const output = [...from];\n  const numValues = output.length;\n  const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n  return v => {\n    for (let i = 0; i < numValues; i++) {\n      output[i] = blendValue[i](v);\n    }\n    return output;\n  };\n};\nconst mixObject = (origin, target) => {\n  const output = {\n    ...origin,\n    ...target\n  };\n  const blendValue = {};\n  for (const key in output) {\n    if (origin[key] !== undefined && target[key] !== undefined) {\n      blendValue[key] = getMixer(origin[key], target[key]);\n    }\n  }\n  return v => {\n    for (const key in blendValue) {\n      output[key] = blendValue[key](v);\n    }\n    return output;\n  };\n};\n/**\n * TODO: Combine with function within complex when style-value-types moved inside Framer Motion\n */\nfunction analyse(value) {\n  const parsed = complex.parse(value);\n  const numValues = parsed.length;\n  let numNumbers = 0;\n  let numColors = 0;\n  for (let i = 0; i < numValues; i++) {\n    // Parsed complex values return with colors first, so if we've seen any number\n    // we're already past that part of the array and don't need to continue running typeof\n    if (numNumbers || typeof parsed[i] === \"number\") {\n      numNumbers++;\n    } else {\n      numColors++;\n    }\n  }\n  return {\n    parsed,\n    numNumbers,\n    numColors\n  };\n}\nconst mixComplex = (origin, target) => {\n  const template = complex.createTransformer(target);\n  const originStats = analyse(origin);\n  const targetStats = analyse(target);\n  const canInterpolate = originStats.numColors === targetStats.numColors && originStats.numNumbers >= targetStats.numNumbers;\n  if (canInterpolate) {\n    return pipe(mixArray(originStats.parsed, targetStats.parsed), template);\n  } else {\n    warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n    return p => `${p > 0 ? target : origin}`;\n  }\n};\nexport { mixArray, mixComplex, mixObject };","map":{"version":3,"names":["complex","color","mix","mixColor","pipe","warning","getMixer","origin","target","v","test","mixComplex","mixArray","from","to","output","numValues","length","blendValue","map","fromThis","i","mixObject","key","undefined","analyse","value","parsed","parse","numNumbers","numColors","template","createTransformer","originStats","targetStats","canInterpolate","p"],"sources":["D:/Uni/4. Semester/SoftwareLab/ColorClicker/node_modules/framer-motion/dist/es/utils/mix-complex.mjs"],"sourcesContent":["import { complex, color } from 'style-value-types';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from 'hey-listen';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\n/**\n * TODO: Combine with function within complex when style-value-types moved inside Framer Motion\n */\nfunction analyse(value) {\n    const parsed = complex.parse(value);\n    const numValues = parsed.length;\n    let numNumbers = 0;\n    let numColors = 0;\n    for (let i = 0; i < numValues; i++) {\n        // Parsed complex values return with colors first, so if we've seen any number\n        // we're already past that part of the array and don't need to continue running typeof\n        if (numNumbers || typeof parsed[i] === \"number\") {\n            numNumbers++;\n        }\n        else {\n            numColors++;\n        }\n    }\n    return { parsed, numNumbers, numColors };\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyse(origin);\n    const targetStats = analyse(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.parsed, targetStats.parsed), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}