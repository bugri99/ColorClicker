{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ernes\\\\Desktop\\\\colorclicker\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './App.css';\nimport Player from './components/Player';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  document.body.style.overflow = \"hidden\";\n  function getRandom(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min) + min);\n  }\n  const [count, setCount] = useState(0);\n  const [visible, setVisible] = useState(0);\n  function renderCircle(xPos, yPos, direction, value, color) {\n    return /*#__PURE__*/_jsxDEV(\"svg\", {\n      className: \"circle\",\n      onClick: () => setCount(count + value),\n      style: {\n        left: `calc(${xPos}vw - 60px)`,\n        top: `calc(${yPos}vw - 60px)`\n      },\n      children: /*#__PURE__*/_jsxDEV(\"circle\", {\n        cx: 30,\n        cy: 30,\n        r: 30,\n        fill: color\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }, this);\n  }\n  function renderCircles(buffAmount) {\n    const circleBuffer = [];\n    for (let i = 0; i < buffAmount; i++) {\n      let circle = renderCircle(getRandom(3, 53), getRandom(3, 40), getRandom(0, 360), getRandom(1, 250), Object.keys(Color)[Math.floor(Math.random() * Object.keys(Color).length)]);\n      circleBuffer.push(circle);\n    }\n    return circleBuffer;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App-currency\",\n        children: [count, \"$\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App-game\",\n        children: renderCircles(20)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App-upgrades\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"dtsO6buTSLho3vm3PjrYI6xO8ag=\");\n_c = App;\nexport default App;\nclass Color {\n  constructor(name) {\n    this.name = name;\n  }\n  toString() {\n    return `Color.${this.name}`;\n  }\n}\nColor.Green = new Color('green');\nColor.Blue = new Color('blue');\nColor.Yellow = new Color('yellow');\nColor.Red = new Color('red');\nColor.Pink = new Color('pink');\nColor.Orange = new Color('orange');\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Player","App","document","body","style","overflow","getRandom","min","max","Math","ceil","floor","random","count","setCount","visible","setVisible","renderCircle","xPos","yPos","direction","value","color","left","top","renderCircles","buffAmount","circleBuffer","i","circle","Object","keys","Color","length","push","constructor","name","toString","Green","Blue","Yellow","Red","Pink","Orange"],"sources":["C:/Users/ernes/Desktop/colorclicker/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport './App.css';\nimport Player from './components/Player';\n\nfunction App() {\n  document.body.style.overflow = \"hidden\"\n\n  function getRandom(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min) + min);\n  }\n\n  const [count, setCount] = useState(0);\n  const [visible, setVisible] = useState(0);\n  \n  function renderCircle(xPos, yPos, direction, value, color) {\n    return (\n                <svg className='circle' onClick={() => setCount(count + value)} style={{\n                    left: `calc(${xPos}vw - 60px)`, \n                    top: `calc(${yPos}vw - 60px)`,\n                    }} \n                    >\n                <circle cx={30} cy={30} r={30} fill={color}/>\n            </svg>\n           );\n  }\n\n  function renderCircles(buffAmount) {\n    const circleBuffer = [];\n    for (let i = 0; i < buffAmount; i++) {\n       let circle = renderCircle(\n          getRandom(3, 53),\n          getRandom(3, 40),\n          getRandom(0, 360),\n          getRandom(1, 250),\n          Object.keys(Color)[Math.floor(Math.random() * Object.keys(Color).length)]\n          );\n        circleBuffer.push(circle);\n    }\n    return circleBuffer;\n  }\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      <div className='App-currency'>\n        {count}$\n      </div>\n      <div className='App-game'>   \n            {renderCircles(20)}\n      {/* <Game />    */}\n        </div>\n        <div className='App-upgrades'>      \n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n\nclass Color {\n  static Green = new Color('green');\n  static Blue = new Color('blue');\n  static Yellow = new Color('yellow');\n  static Red = new Color('red');\n  static Pink = new Color('pink');\n  static Orange = new Color('orange');\n\n  constructor(name) {\n    this.name = name;\n  }\n  toString() {\n    return `Color.${this.name}`;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}